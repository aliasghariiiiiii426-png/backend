version: "3.9"

name: "Shopify"

networks:
  shopify_backend:
    external: true

volumes:
  postgres_data:
  traefik_data:

services:

  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: always
    hostname: traefik
    command:
      - "--log.level=ERROR"  # reduce logs in prod
      - "--api.dashboard=true"
      - "--api.insecure=false"  # disable insecure dashboard
      - "--providers.docker=true"
      - "--providers.docker.network=shopify_backend"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=behnam.ahmadifar@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/certs/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - shopify_backend
    labels:
      # Dashboard (secured via basic auth)
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.bazmino.com`)"
      - "traefik.http.routers.traefik.entrypoints=web-secure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.middlewares=web-auth@docker"
      - "traefik.http.middlewares.web-auth.basicauth.users=${web_auth_user}:${web_auth_pass}"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  shopify_postgres:
    image: postgres:15
    container_name: shopify_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopify_backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  shopify_backend:
    build: .
    container_name: shopify_backend
    restart: always
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      shopify_postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=shopify_backend"
      - "traefik.http.routers.shopify.entrypoints=web-secure"
      - "traefik.http.routers.shopify.rule=Host(`bazmino.com`)"
      - "traefik.http.routers.shopify.tls=true"
      - "traefik.http.routers.shopify.tls.certresolver=le"
      - "traefik.http.services.shopify.loadbalancer.server.port=8000"
    networks:
      - shopify_backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
