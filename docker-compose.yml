services:
  shopify_postgres:
    image: postgres:15
    container_name: shopify_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  shopify_backend:
    build: .
    container_name: shopify_backend
    restart: always
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - shopify_postgres
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  shopify_nginx:
    image: nginx:alpine
    container_name: shopify_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    depends_on:
      - shopify_backend

  shopify_certbot:
    image: certbot/certbot
    container_name: shopify_certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done"

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
